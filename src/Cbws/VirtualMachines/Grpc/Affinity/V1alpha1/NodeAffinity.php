<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cbws/virtual_machines/affinity/v1alpha1/affinity.proto

namespace Cbws\VirtualMachines\Grpc\Affinity\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Node affinity is a group of node affinity scheduling rules.
 *
 * Generated from protobuf message <code>cbws.virtual_machines.affinity.v1alpha1.NodeAffinity</code>
 */
class NodeAffinity extends \Google\Protobuf\Internal\Message
{
    /**
     * (-- api-linter: core::0203::required=disabled --)
     * The scheduler will prefer to schedule instances to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     *
     * Generated from protobuf field <code>repeated .cbws.virtual_machines.affinity.v1alpha1.PreferredSchedulingTerm preferred_during_scheduling_ignored_during_execution = 1;</code>
     */
    private $preferred_during_scheduling_ignored_during_execution;
    /**
     * If the affinity requirements specified by this field are not met at scheduling time, the instance will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during instance execution (e.g. due to an update), the system may or may not try to eventually evict the instance from its node.
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.NodeSelector required_during_scheduling_ignored_during_execution = 2;</code>
     */
    protected $required_during_scheduling_ignored_during_execution = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\PreferredSchedulingTerm[]|\Google\Protobuf\Internal\RepeatedField $preferred_during_scheduling_ignored_during_execution
     *           (-- api-linter: core::0203::required=disabled --)
     *           The scheduler will prefer to schedule instances to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     *     @type \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeSelector $required_during_scheduling_ignored_during_execution
     *           If the affinity requirements specified by this field are not met at scheduling time, the instance will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during instance execution (e.g. due to an update), the system may or may not try to eventually evict the instance from its node.
     * }
     */
    public function __construct($data = NULL) {
        \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\Metadata\Affinity::initOnce();
        parent::__construct($data);
    }

    /**
     * (-- api-linter: core::0203::required=disabled --)
     * The scheduler will prefer to schedule instances to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     *
     * Generated from protobuf field <code>repeated .cbws.virtual_machines.affinity.v1alpha1.PreferredSchedulingTerm preferred_during_scheduling_ignored_during_execution = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPreferredDuringSchedulingIgnoredDuringExecution()
    {
        return $this->preferred_during_scheduling_ignored_during_execution;
    }

    /**
     * (-- api-linter: core::0203::required=disabled --)
     * The scheduler will prefer to schedule instances to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
     *
     * Generated from protobuf field <code>repeated .cbws.virtual_machines.affinity.v1alpha1.PreferredSchedulingTerm preferred_during_scheduling_ignored_during_execution = 1;</code>
     * @param \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\PreferredSchedulingTerm[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPreferredDuringSchedulingIgnoredDuringExecution($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\PreferredSchedulingTerm::class);
        $this->preferred_during_scheduling_ignored_during_execution = $arr;

        return $this;
    }

    /**
     * If the affinity requirements specified by this field are not met at scheduling time, the instance will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during instance execution (e.g. due to an update), the system may or may not try to eventually evict the instance from its node.
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.NodeSelector required_during_scheduling_ignored_during_execution = 2;</code>
     * @return \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeSelector
     */
    public function getRequiredDuringSchedulingIgnoredDuringExecution()
    {
        return $this->required_during_scheduling_ignored_during_execution;
    }

    /**
     * If the affinity requirements specified by this field are not met at scheduling time, the instance will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during instance execution (e.g. due to an update), the system may or may not try to eventually evict the instance from its node.
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.NodeSelector required_during_scheduling_ignored_during_execution = 2;</code>
     * @param \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeSelector $var
     * @return $this
     */
    public function setRequiredDuringSchedulingIgnoredDuringExecution($var)
    {
        GPBUtil::checkMessage($var, \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeSelector::class);
        $this->required_during_scheduling_ignored_during_execution = $var;

        return $this;
    }

}

