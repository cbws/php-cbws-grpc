<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cbws/vpn/v1alpha1/instance.proto

namespace Cbws\VPN\GRPC\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cbws.vpn.v1alpha1.Profile</code>
 */
class Profile extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string parent = 2;</code>
     */
    protected $parent = '';
    /**
     * Generated from protobuf field <code>string display_name = 3;</code>
     */
    protected $display_name = '';
    /**
     * The IPv6 prefix that gets routed to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_prefix = 4;</code>
     */
    protected $ipv6_prefix = '';
    /**
     * The IPv6 address assigned to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_address = 10;</code>
     */
    protected $ipv6_address = '';
    /**
     * The IPv6 remote peer address that gets send to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_gateway_address = 5;</code>
     */
    protected $ipv6_gateway_address = '';
    /**
     * The IPv6 address used as source for translated IPv4 packets
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_464xlat_address = 6;</code>
     */
    protected $ipv4_464xlat_address = '';
    /**
     * The IPv4 address assigned to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_address = 7;</code>
     */
    protected $ipv4_address = '';
    /**
     * The IPv4 remote peer address that gets send to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_gateway_address = 8;</code>
     */
    protected $ipv4_gateway_address = '';
    /**
     * A ZIP archive containing the certificates and OpenVPN profile.
     * Only available during create
     *
     * Generated from protobuf field <code>bytes profile_archive = 9;</code>
     */
    protected $profile_archive = '';
    /**
     * The CA certificate for the client and server certificate.
     * Only available during create
     *
     * Generated from protobuf field <code>string ca_certificate = 11;</code>
     */
    protected $ca_certificate = '';
    /**
     * The certificate to be used by the client.
     * Only available during create
     *
     * Generated from protobuf field <code>string certificate = 12;</code>
     */
    protected $certificate = '';
    /**
     * The private key to be used by the client.
     * Only available during create
     *
     * Generated from protobuf field <code>string private_key = 13;</code>
     */
    protected $private_key = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type string $parent
     *     @type string $display_name
     *     @type string $ipv6_prefix
     *           The IPv6 prefix that gets routed to the profile client
     *           Read-only
     *     @type string $ipv6_address
     *           The IPv6 address assigned to the profile client
     *           Read-only
     *     @type string $ipv6_gateway_address
     *           The IPv6 remote peer address that gets send to the profile client
     *           Read-only
     *     @type string $ipv4_464xlat_address
     *           The IPv6 address used as source for translated IPv4 packets
     *           Read-only
     *     @type string $ipv4_address
     *           The IPv4 address assigned to the profile client
     *           Read-only
     *     @type string $ipv4_gateway_address
     *           The IPv4 remote peer address that gets send to the profile client
     *           Read-only
     *     @type string $profile_archive
     *           A ZIP archive containing the certificates and OpenVPN profile.
     *           Only available during create
     *     @type string $ca_certificate
     *           The CA certificate for the client and server certificate.
     *           Only available during create
     *     @type string $certificate
     *           The certificate to be used by the client.
     *           Only available during create
     *     @type string $private_key
     *           The private key to be used by the client.
     *           Only available during create
     * }
     */
    public function __construct($data = NULL) {
        \Cbws\VPN\GRPC\V1alpha1\Metadata\Instance::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string parent = 2;</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Generated from protobuf field <code>string parent = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The IPv6 prefix that gets routed to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_prefix = 4;</code>
     * @return string
     */
    public function getIpv6Prefix()
    {
        return $this->ipv6_prefix;
    }

    /**
     * The IPv6 prefix that gets routed to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_prefix = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6Prefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_prefix = $var;

        return $this;
    }

    /**
     * The IPv6 address assigned to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_address = 10;</code>
     * @return string
     */
    public function getIpv6Address()
    {
        return $this->ipv6_address;
    }

    /**
     * The IPv6 address assigned to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_address = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6Address($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_address = $var;

        return $this;
    }

    /**
     * The IPv6 remote peer address that gets send to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_gateway_address = 5;</code>
     * @return string
     */
    public function getIpv6GatewayAddress()
    {
        return $this->ipv6_gateway_address;
    }

    /**
     * The IPv6 remote peer address that gets send to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv6_gateway_address = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6GatewayAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_gateway_address = $var;

        return $this;
    }

    /**
     * The IPv6 address used as source for translated IPv4 packets
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_464xlat_address = 6;</code>
     * @return string
     */
    public function getIpv4464XlatAddress()
    {
        return $this->ipv4_464xlat_address;
    }

    /**
     * The IPv6 address used as source for translated IPv4 packets
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_464xlat_address = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv4464XlatAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv4_464xlat_address = $var;

        return $this;
    }

    /**
     * The IPv4 address assigned to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_address = 7;</code>
     * @return string
     */
    public function getIpv4Address()
    {
        return $this->ipv4_address;
    }

    /**
     * The IPv4 address assigned to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_address = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv4Address($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv4_address = $var;

        return $this;
    }

    /**
     * The IPv4 remote peer address that gets send to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_gateway_address = 8;</code>
     * @return string
     */
    public function getIpv4GatewayAddress()
    {
        return $this->ipv4_gateway_address;
    }

    /**
     * The IPv4 remote peer address that gets send to the profile client
     * Read-only
     *
     * Generated from protobuf field <code>string ipv4_gateway_address = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv4GatewayAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv4_gateway_address = $var;

        return $this;
    }

    /**
     * A ZIP archive containing the certificates and OpenVPN profile.
     * Only available during create
     *
     * Generated from protobuf field <code>bytes profile_archive = 9;</code>
     * @return string
     */
    public function getProfileArchive()
    {
        return $this->profile_archive;
    }

    /**
     * A ZIP archive containing the certificates and OpenVPN profile.
     * Only available during create
     *
     * Generated from protobuf field <code>bytes profile_archive = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setProfileArchive($var)
    {
        GPBUtil::checkString($var, False);
        $this->profile_archive = $var;

        return $this;
    }

    /**
     * The CA certificate for the client and server certificate.
     * Only available during create
     *
     * Generated from protobuf field <code>string ca_certificate = 11;</code>
     * @return string
     */
    public function getCaCertificate()
    {
        return $this->ca_certificate;
    }

    /**
     * The CA certificate for the client and server certificate.
     * Only available during create
     *
     * Generated from protobuf field <code>string ca_certificate = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setCaCertificate($var)
    {
        GPBUtil::checkString($var, True);
        $this->ca_certificate = $var;

        return $this;
    }

    /**
     * The certificate to be used by the client.
     * Only available during create
     *
     * Generated from protobuf field <code>string certificate = 12;</code>
     * @return string
     */
    public function getCertificate()
    {
        return $this->certificate;
    }

    /**
     * The certificate to be used by the client.
     * Only available during create
     *
     * Generated from protobuf field <code>string certificate = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setCertificate($var)
    {
        GPBUtil::checkString($var, True);
        $this->certificate = $var;

        return $this;
    }

    /**
     * The private key to be used by the client.
     * Only available during create
     *
     * Generated from protobuf field <code>string private_key = 13;</code>
     * @return string
     */
    public function getPrivateKey()
    {
        return $this->private_key;
    }

    /**
     * The private key to be used by the client.
     * Only available during create
     *
     * Generated from protobuf field <code>string private_key = 13;</code>
     * @param string $var
     * @return $this
     */
    public function setPrivateKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->private_key = $var;

        return $this;
    }

}

