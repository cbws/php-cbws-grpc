<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cbws/virtual_machines/affinity/v1alpha1/affinity.proto

namespace Cbws\VirtualMachines\Grpc\Affinity\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Affinity is a group of affinity scheduling rules.
 *
 * Generated from protobuf message <code>cbws.virtual_machines.affinity.v1alpha1.Affinity</code>
 */
class Affinity extends \Google\Protobuf\Internal\Message
{
    /**
     * Describes node affinity scheduling rules for the instance.
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.NodeAffinity node_affinity = 1;</code>
     */
    protected $node_affinity = null;
    /**
     * Describes instance affinity scheduling rules (e.g. co-locate this instance in the same node, zone, etc. as some other instance(s)).
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.InstanceAffinity instance_affinity = 2;</code>
     */
    protected $instance_affinity = null;
    /**
     * Describes instance anti-affinity scheduling rules (e.g. avoid putting this instance in the same node, zone, etc. as some other instance(s)).
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.InstanceAntiAffinity instance_anti_affinity = 3;</code>
     */
    protected $instance_anti_affinity = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeAffinity $node_affinity
     *           Describes node affinity scheduling rules for the instance.
     *     @type \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAffinity $instance_affinity
     *           Describes instance affinity scheduling rules (e.g. co-locate this instance in the same node, zone, etc. as some other instance(s)).
     *     @type \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAntiAffinity $instance_anti_affinity
     *           Describes instance anti-affinity scheduling rules (e.g. avoid putting this instance in the same node, zone, etc. as some other instance(s)).
     * }
     */
    public function __construct($data = NULL) {
        \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\Metadata\Affinity::initOnce();
        parent::__construct($data);
    }

    /**
     * Describes node affinity scheduling rules for the instance.
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.NodeAffinity node_affinity = 1;</code>
     * @return \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeAffinity
     */
    public function getNodeAffinity()
    {
        return $this->node_affinity;
    }

    /**
     * Describes node affinity scheduling rules for the instance.
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.NodeAffinity node_affinity = 1;</code>
     * @param \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeAffinity $var
     * @return $this
     */
    public function setNodeAffinity($var)
    {
        GPBUtil::checkMessage($var, \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\NodeAffinity::class);
        $this->node_affinity = $var;

        return $this;
    }

    /**
     * Describes instance affinity scheduling rules (e.g. co-locate this instance in the same node, zone, etc. as some other instance(s)).
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.InstanceAffinity instance_affinity = 2;</code>
     * @return \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAffinity
     */
    public function getInstanceAffinity()
    {
        return $this->instance_affinity;
    }

    /**
     * Describes instance affinity scheduling rules (e.g. co-locate this instance in the same node, zone, etc. as some other instance(s)).
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.InstanceAffinity instance_affinity = 2;</code>
     * @param \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAffinity $var
     * @return $this
     */
    public function setInstanceAffinity($var)
    {
        GPBUtil::checkMessage($var, \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAffinity::class);
        $this->instance_affinity = $var;

        return $this;
    }

    /**
     * Describes instance anti-affinity scheduling rules (e.g. avoid putting this instance in the same node, zone, etc. as some other instance(s)).
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.InstanceAntiAffinity instance_anti_affinity = 3;</code>
     * @return \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAntiAffinity
     */
    public function getInstanceAntiAffinity()
    {
        return $this->instance_anti_affinity;
    }

    /**
     * Describes instance anti-affinity scheduling rules (e.g. avoid putting this instance in the same node, zone, etc. as some other instance(s)).
     *
     * Generated from protobuf field <code>.cbws.virtual_machines.affinity.v1alpha1.InstanceAntiAffinity instance_anti_affinity = 3;</code>
     * @param \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAntiAffinity $var
     * @return $this
     */
    public function setInstanceAntiAffinity($var)
    {
        GPBUtil::checkMessage($var, \Cbws\VirtualMachines\Grpc\Affinity\V1alpha1\InstanceAntiAffinity::class);
        $this->instance_anti_affinity = $var;

        return $this;
    }

}

