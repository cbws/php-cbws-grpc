<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cbws/virtual_machines/v1alpha1/instance.proto

namespace Cbws\VirtualMachines\Grpc\V1alpha1\Instance;

use UnexpectedValueException;

/**
 * Protobuf type <code>cbws.virtual_machines.v1alpha1.Instance.State</code>
 */
class State
{
    /**
     * Generated from protobuf enum <code>STATE_UNSPECIFIED = 0;</code>
     */
    const STATE_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>STATE_PROVISIONING = 1;</code>
     */
    const STATE_PROVISIONING = 1;
    /**
     * Generated from protobuf enum <code>STATE_STAGING = 2;</code>
     */
    const STATE_STAGING = 2;
    /**
     * Generated from protobuf enum <code>STATE_RUNNING = 3;</code>
     */
    const STATE_RUNNING = 3;
    /**
     * Generated from protobuf enum <code>STATE_STOPPING = 4;</code>
     */
    const STATE_STOPPING = 4;
    /**
     * Generated from protobuf enum <code>STATE_SUSPENDING = 5;</code>
     */
    const STATE_SUSPENDING = 5;
    /**
     * Generated from protobuf enum <code>STATE_SUSPENDED = 6;</code>
     */
    const STATE_SUSPENDED = 6;
    /**
     * Generated from protobuf enum <code>STATE_REPAIRING = 7;</code>
     */
    const STATE_REPAIRING = 7;
    /**
     * Generated from protobuf enum <code>STATE_TERMINATED = 8;</code>
     */
    const STATE_TERMINATED = 8;

    private static $valueToName = [
        self::STATE_UNSPECIFIED => 'STATE_UNSPECIFIED',
        self::STATE_PROVISIONING => 'STATE_PROVISIONING',
        self::STATE_STAGING => 'STATE_STAGING',
        self::STATE_RUNNING => 'STATE_RUNNING',
        self::STATE_STOPPING => 'STATE_STOPPING',
        self::STATE_SUSPENDING => 'STATE_SUSPENDING',
        self::STATE_SUSPENDED => 'STATE_SUSPENDED',
        self::STATE_REPAIRING => 'STATE_REPAIRING',
        self::STATE_TERMINATED => 'STATE_TERMINATED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(State::class, \Cbws\VirtualMachines\Grpc\V1alpha1\Instance_State::class);

