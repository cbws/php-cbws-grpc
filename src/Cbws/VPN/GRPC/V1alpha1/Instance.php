<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cbws/vpn/v1alpha1/instance.proto

namespace Cbws\VPN\GRPC\V1alpha1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cbws.vpn.v1alpha1.Instance</code>
 */
class Instance extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string parent = 2;</code>
     */
    protected $parent = '';
    /**
     * Generated from protobuf field <code>string display_name = 3;</code>
     */
    protected $display_name = '';
    /**
     * The IPv6 prefix from which profile addresses will be allocated
     *
     * Generated from protobuf field <code>string ipv6_prefix = 4;</code>
     */
    protected $ipv6_prefix = '';
    /**
     * Whether to make the VPN the default IPv6 gateway on profile clients
     *
     * Generated from protobuf field <code>bool ipv6_default_gateway = 5;</code>
     */
    protected $ipv6_default_gateway = false;
    /**
     * Whether to make the VPN the default IPv4 gateway on profile clients
     * This is not recommended and only included for completeness and specific use-cases. IPv6 should be used for
     * accessing private services whenever possible.
     *
     * Generated from protobuf field <code>bool ipv4_default_gateway = 6;</code>
     */
    protected $ipv4_default_gateway = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type string $parent
     *     @type string $display_name
     *     @type string $ipv6_prefix
     *           The IPv6 prefix from which profile addresses will be allocated
     *     @type bool $ipv6_default_gateway
     *           Whether to make the VPN the default IPv6 gateway on profile clients
     *     @type bool $ipv4_default_gateway
     *           Whether to make the VPN the default IPv4 gateway on profile clients
     *           This is not recommended and only included for completeness and specific use-cases. IPv6 should be used for
     *           accessing private services whenever possible.
     * }
     */
    public function __construct($data = NULL) {
        \Cbws\VPN\GRPC\V1alpha1\Metadata\Instance::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string parent = 2;</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Generated from protobuf field <code>string parent = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Generated from protobuf field <code>string display_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The IPv6 prefix from which profile addresses will be allocated
     *
     * Generated from protobuf field <code>string ipv6_prefix = 4;</code>
     * @return string
     */
    public function getIpv6Prefix()
    {
        return $this->ipv6_prefix;
    }

    /**
     * The IPv6 prefix from which profile addresses will be allocated
     *
     * Generated from protobuf field <code>string ipv6_prefix = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6Prefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_prefix = $var;

        return $this;
    }

    /**
     * Whether to make the VPN the default IPv6 gateway on profile clients
     *
     * Generated from protobuf field <code>bool ipv6_default_gateway = 5;</code>
     * @return bool
     */
    public function getIpv6DefaultGateway()
    {
        return $this->ipv6_default_gateway;
    }

    /**
     * Whether to make the VPN the default IPv6 gateway on profile clients
     *
     * Generated from protobuf field <code>bool ipv6_default_gateway = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setIpv6DefaultGateway($var)
    {
        GPBUtil::checkBool($var);
        $this->ipv6_default_gateway = $var;

        return $this;
    }

    /**
     * Whether to make the VPN the default IPv4 gateway on profile clients
     * This is not recommended and only included for completeness and specific use-cases. IPv6 should be used for
     * accessing private services whenever possible.
     *
     * Generated from protobuf field <code>bool ipv4_default_gateway = 6;</code>
     * @return bool
     */
    public function getIpv4DefaultGateway()
    {
        return $this->ipv4_default_gateway;
    }

    /**
     * Whether to make the VPN the default IPv4 gateway on profile clients
     * This is not recommended and only included for completeness and specific use-cases. IPv6 should be used for
     * accessing private services whenever possible.
     *
     * Generated from protobuf field <code>bool ipv4_default_gateway = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setIpv4DefaultGateway($var)
    {
        GPBUtil::checkBool($var);
        $this->ipv4_default_gateway = $var;

        return $this;
    }

}

